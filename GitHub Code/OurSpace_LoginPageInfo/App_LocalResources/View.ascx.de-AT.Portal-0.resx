<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="heardFrom0.Text" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="heardFrom1.Text" xml:space="preserve">
    <value>Durch eine Presseaussendung</value>
  </data>
  <data name="heardFrom2.Text" xml:space="preserve">
    <value>Durch eine/n Freund/in</value>
  </data>
  <data name="heardFrom3.Text" xml:space="preserve">
    <value>Durch einen Workshop /  einem Event</value>
  </data>
  <data name="heardFrom4.Text" xml:space="preserve">
    <value>Durch eine Brochüre / einen Newsletter</value>
  </data>
  <data name="heardFrom5.Text" xml:space="preserve">
    <value>Durch Facebook oder Twitter</value>
  </data>
  <data name="heardFrom6.Text" xml:space="preserve">
    <value>Andere</value>
  </data>
  <data name="lblDebate.Text" xml:space="preserve">
    <value>Es geht um deine Ideen und Gedanken: Finde heraus, was andere dazu zu sagen haben, diskutiere, stimme ab und finde gemeinsam Lösungen für Probleme, die uns alle betreffen.</value>
  </data>
  <data name="lblDebateTitle.Text" xml:space="preserve">
    <value>Debattiere!</value>
  </data>
  <data name="lblExpress.Text" xml:space="preserve">
    <value>Es ist Zeit, dass du ein Mitspracherecht erhältst! Hier kannst du ausdrücken, was dich beschäftigt.</value>
  </data>
  <data name="lblExpressTitle.Text" xml:space="preserve">
    <value>Stell deine Ideen dar!</value>
  </data>
  <data name="lblExtra1.Text" xml:space="preserve">
    <value>Wenn du denkst, dass die PolitikerInnen im Parlament taub sind, dann ist es Zeit ihnen hier Meinung lautstark kund zu tun.</value>
  </data>
  <data name="lblExtra2.Text" xml:space="preserve">
    <value>&lt;p&gt;&lt;b&gt;So kannst du mitmachen:&lt;/b&gt;&lt;br/&gt;
Registriere dich mit deiner E-Mail-Adresse oder logge dich direkt mit deinem Facebook-Account ein.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Du hast noch Fragen?&lt;/b&gt; Weiterlesen unter &lt;a href="http://www.joinourspace.eu/WhatisOurspacedeAT/tabid/250/language/de-AT/Default.aspx"&gt;"Was ist OurSpace"&lt;/a&gt;.
&lt;/p&gt;</value>
  </data>
  <data name="lblIntro1.Text" xml:space="preserve">
    <value>Auf OurSpace treffen junge Menschen aus ganz Europa mit Politiker/innen zusammen. Teile deine Meinung, diskutiere, schreibe, mache Vorschläge: Trage etwas bei zu Themen, die bislang ohne dich entschieden wurden.</value>
  </data>
  <data name="lblIntro2.Text" xml:space="preserve">
    <value />
  </data>
  <data name="lblMeet.Text" xml:space="preserve">
    <value>Auf OurSpace hast du die Möglichkeit, junge Menschen und Politiker/innen aus ganz Europa zu treffen, die sich für deine Anliegen interessieren.</value>
  </data>
  <data name="lblMeetTitle.Text" xml:space="preserve">
    <value>Triff deine PolitikerInnen!</value>
  </data>
  <data name="lblTitle.Text" xml:space="preserve">
    <value>Deine Meinung zählt!</value>
  </data>
</root>